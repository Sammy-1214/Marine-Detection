# OpenCV for object detection
import cv2

# Load and resize image
raw_image = cv2.imread("C:/Users/dee41/OneDrive - rit.edu/College Assignments/Personal Projects/Marine Detection/Marine-Detection-Software/Test Marine/Dolphin.jpg")
image = cv2.resize(raw_image, (800, 800))

# Convert to grayscale
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Apply Gaussian blur to reduce noise
blurred = cv2.GaussianBlur(gray, (5, 5), 0)

# Threshold the image to isolate objects
thresh = cv2.adaptiveThreshold(blurred, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY_INV, 11, 2)

# Find contours in the edge-detected image
contours, _ = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

# Draw bounding boxes around contours
output = image.copy()
for contour in contours:
    area = cv2.contourArea(contour)
    if area > 1000:
        # Filter out small noises
        x, y, w, h = cv2.boundingRect(contour)
        cv2.rectangle(output, (x, y), (x + w, y + h), (0, 255, 0), 2)

# Check if image loaded successfully
if image is None:
    print("Error: Image not found or path is incorrect")
else:
    #Display Image
    cv2.imshow("Contour Detection", output)
    cv2.waitKey(0)
    cv2.destroyAllWindows